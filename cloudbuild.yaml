steps:
- name: 'gcr.io/cloud-builders/docker'
  args: ['build', '-t', 'gcr.io/${PROJECT_ID}/${_PROJECT_NAME}:$SHORT_SHA', '.']
  id: 'Building Docker image'
  
- name: 'gcr.io/cloud-builders/docker'
  args: ['push','gcr.io/${PROJECT_ID}/${_PROJECT_NAME}:${SHORT_SHA}']
  id: 'Pushing Docker image'

- name: 'ubuntu'
  id: 'Substituting yml files with environment variables'
  entrypoint: 'bash'
  args:
  - '-c'
  - |
      apt-get update \
      && apt-get -y install gettext-base \
      && apt-get clean \
      && rm -rf /var/lib/apt/lists/*
      for filename in ./k8s/*.yml; do
          envsubst < "${filename}" > "${filename}.tmp" && mv ${filename}.tmp ${filename}
      done
  env:
  - '_PROJECT_NAME=${_PROJECT_NAME}'
  - 'PROJECT_ID=${PROJECT_ID}'
  - 'SHORT_SHA=${SHORT_SHA}'
  - '_CONTAINER_PORT=${_CONTAINER_PORT}'

- name: 'gcr.io/cloud-builders/kubectl'
  args: ['apply','-f','k8s/']
  id: 'Setting up Google Cloud Kubernetes Deployment'
  env:
  - 'CLOUDSDK_COMPUTE_REGION=$_CLOUDSDK_COMPUTE_REGION'
  - 'CLOUDSDK_COMPUTE_ZONE=$_CLOUDSDK_COMPUTE_ZONE'
  - 'CLOUDSDK_CONTAINER_CLUSTER=$_CLOUDSDK_CONTAINER_CLUSTER'

# - name: 'gcr.io/cloud-builders/kubectl'
#   args:
#   - set
#   - image
#   - deployment/${_PROJECT_NAME}
#   - ${_PROJECT_NAME}=gcr.io/${PROJECT_ID}/${_PROJECT_NAME}:${SHORT_SHA}
#   id: 'Deploying to Kubernetes'
#   env:
#     - 'CLOUDSDK_COMPUTE_REGION=$_CLOUDSDK_COMPUTE_REGION'
#     - 'CLOUDSDK_COMPUTE_ZONE=$_CLOUDSDK_COMPUTE_ZONE'
#     - 'CLOUDSDK_CONTAINER_CLUSTER=$_CLOUDSDK_CONTAINER_CLUSTER'